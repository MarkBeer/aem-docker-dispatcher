Listen 80

LoadModule rewrite_module modules/mod_rewrite.so
LoadModule dispatcher_module modules/mod_dispatcher.so
LoadModule substitute_module modules/mod_substitute.so
LoadModule headers_module modules/mod_headers.so

<IfModule disp_apache2.c>
	# location of the configuration file. eg: 'conf/dispatcher.any'
	DispatcherConfig conf/dispatcher.any

	# location of the dispatcher log file. eg: 'logs/dispatcher.log'
	DispatcherLog    logs/dispatcher.log

	# log level for the dispatcher log
	# 0 Errors
	# 1 Warnings
	# 2 Infos
	# 3 Debug
	DispatcherLogLevel ${log_level}

	# if turned to 1, the dispatcher looks like a normal module
	DispatcherNoServerHeader 0

	# if turned to 1, request to / are not handled by the dispatcher
	# use the mod_alias then for the correct mapping
	DispatcherDeclineRoot 0

	# if turned to 1, the dispatcher uses the URL already processed
	# by handlers preceeding the dispatcher (i.e. mod_rewrite)
	# instead of the original one passed to the web server.
	DispatcherUseProcessedURL 1

	#allow apache to handle errors above 400
	DispatcherPassError 500-503
</IfModule>

#NameVirtualHost *:80
<VirtualHost *:80>
 AddOutputFilterByType SUBSTITUTE text/html

        RewriteEngine  on
        RewriteMap lc int:tolower
	#changes by zp for STA-2421
    #Disable ETags
    Header unset Etag
    FileETag none
	SetEnv filter-errordocs 404

    #Implement Expires and Cache-control headers

    ExpiresActive Off
    ExpiresDefault "access plus 1 month"
    ExpiresByType text/html "access plus 1 hour"
    ExpiresByType application/json "access plus 1 hour"

  #Disable cache control headers for servlet responses, apart from the client libs

    <LocationMatch "/bin/(?!clientlibchacheservlet)">
        ExpiresActive Off
    </LocationMatch>
	
	<LocationMatch "/content/stw/en/homepage/my-account/*.html">
            Header set Cache-Control "no-cache, no-store, must-revalidate"
            Header set Pragma "no-cache"
            Header set Expires 0
	</LocationMatch>
	
	<LocationMatch "/content/dam/*">
	    Header Set Cache-Control "max-age=3600, public"
	</LocationMatch>

	<LocationMatch "/bin/clientlibchacheservlet.*">
	    Header Set Cache-Control "max-age=2628000, public"
	</LocationMatch>
	
	#Don't set Expires on the root of the author domain - this ensures the login redirect will work
    <If "%{server_name} =~ /author/">   
        SetEnvIf Request_URI "/" is_root
        Header unset Expires env=is_root
        Header unset Cache-Control env=is_root
    </If>

    #Set cross domain policy to None
    Header always set X-Permitted-Cross-Domain-Policies "none"

    #output HSTS header in all responses
    Header always set Strict-Transport-Security "max-age=15768000; includeSubDomains;"
	
	#add X-XSS protection header
    Header always set X-XSS-Protection "1; mode=block;"
	
	#add X-Content-Type-Options protection header
    Header always set X-Content-Type-Options "nosniff;"

    # All cookies should be httponly and secure except the STWLoginEvent analytics cookie
    Header edit Set-Cookie ^((?!(STWLoginEvent|STW-X-)).*)$ $1;HttpOnly;Secure

	#non www to www
	RewriteCond %{HTTP_HOST} !^www\. [NC]
	RewriteCond %{SERVER_NAME} !${tmj_host}
	RewriteCond %{SERVER_NAME} !${stwworks_host}
	RewriteCond %{SERVER_NAME} !${business_host}
	RewriteCond %{SERVER_NAME} !${stwater_author_host}
	RewriteCond ${live_mode} !non-live
	RewriteCond %{REQUEST_URI} !^/dispatcher/invalidate.cache
	RewriteRule ^(.*)$ http://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L]


	#redirect requests for wrong hosts to the stwater host
        RewriteCond %{SERVER_NAME} !adobecqms.net
        RewriteCond %{SERVER_NAME} !${stwater_host}
		RewriteCond %{SERVER_NAME} !${hdcymru_host}
		RewriteCond %{SERVER_NAME} !${tmj_host}
        RewriteCond %{SERVER_NAME} !${severntrent_host}
		RewriteCond %{SERVER_NAME} !${severntrentgraduates_host}
        RewriteCond %{SERVER_NAME} !${severntrentapprentices_host}
        RewriteCond %{SERVER_NAME} !${stwworks_host}
        RewriteCond %{SERVER_NAME} !${business_host}
		RewriteCond %{SERVER_NAME} !www.${stwworks_host}
        RewriteCond %{SERVER_NAME} !${stwater_author_host}
        RewriteCond %{REQUEST_URI} !^/dispatcher/invalidate.cache
        RewriteRule !/eagle/check\.sh https://${stwater_host}%{REQUEST_URI} [L,R=301]

        #Maintenance page
        RewriteCond %{SERVER_NAME} ^${stwater_host} [OR]
        RewriteCond %{SERVER_NAME} ^${hdcymru_host} [OR]
        RewriteCond %{SERVER_NAME} ^${severntrent_host}
        RewriteCond %{DOCUMENT_ROOT}/errorpages/maintenance.html -f
        RewriteCond %{REQUEST_URI} !^/errorpages
        RewriteCond %{DOCUMENT_ROOT}/maintenance.enable -f
        RewriteCond %{SCRIPT_FILENAME} !/errorpages/maintenance.html
        RewriteRule ^.*$ /errorpages/maintenance.html [R=503,L]
        #Header Set Cache-Control "max-age=0, no-store"

	#redirect http requests to https using 301 moved permanently

        RewriteCond %{HTTP:X-Forwarded-Proto} !https
        RewriteCond %{REQUEST_URI} !^/dispatcher/invalidate.cache
        RewriteRule !/eagle/check\.sh https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]

	# Ensure Type Ahead json requests are not url shortened
    	RewriteCond     %{REQUEST_URI} suggestions
    	RewriteRule     (.*) $1 [PT,L,QSA]
		
	#rewrite sitemaps to the relevant file in the dam
    RewriteRule sitemap.xml /content/dam/stw/sitemaps/%{SERVER_NAME}.xml [PT,L,QSA]

	# legacy domain redirects (trackmyjob, severntrentgraduates, severntrentapprentices, stw.works)
        Include conf.d/legacy_redirects/legacy_redirects_other.conf

        # stwater.co.uk rules

	# Handle legacy WSS/book-marked header urls

	Include conf.d/legacy_redirects/legacy_redirects_stwater.conf


        # Handle request with no slash and no extension
	RewriteMap vanitymap "txt:/mnt/var/www/vanityurls.txt"

	RewriteCond %{SERVER_NAME} ^${stwater_host}
        RewriteCond %{REQUEST_URI} !^/content/dam/.*
	RewriteCond %{REQUEST_URI} !^/bin/.*
        RewriteCond %{REQUEST_URI} !.*\..*$
        RewriteCond %{REQUEST_URI} !.*/$
        RewriteCond ${vanitymap:/$1} !>""
		RewriteCond %{REQUEST_URI} !^.*/j_security_check.*
	RewriteRule /(.*)$ https://%{SERVER_NAME}/${lc:$1}/ [R,QSA]


	# Handle vanity urls ending with a trailing slash
	RewriteCond %{SERVER_NAME} ^${stwater_host}
	RewriteCond ${vanitymap:/$1} >""
	RewriteRule /(.*)/$ https://%{SERVER_NAME}/${lc:$1} [R,QSA]


        # Handle requests to pages ending with an extension

	RewriteCond %{SERVER_NAME} ^${stwater_host}
	RewriteCond    %{REQUEST_URI} !^/content/dam/.*
	RewriteCond    %{REQUEST_URI} !^/bin/.*
	RewriteCond    %{REQUEST_URI} !^/etc/.*
	RewriteCond    %{REQUEST_URI} !^/libs/.*
	RewriteCond    %{REQUEST_URI} !.(jpg|gif|png|svg)$
	RewriteCond    %{REQUEST_URI} !imgscale
	RewriteCond %{REQUEST_URI} !errorpages
	RewriteCond    %{REQUEST_URI} .*\..*$
	RewriteCond    %{REQUEST_URI} !.*/$
	RewriteRule    /(.*)\.(.*)$ https://%{SERVER_NAME}/${lc:$1}/ [R,QSA]

        # Handle requests starting with the site root path
        RewriteCond %{SERVER_NAME} ^${stwater_host}
        RewriteCond    %{REQUEST_URI} !^/content/dam/.*
        RewriteCond    %{REQUEST_URI} !^.*_jcr_content.*
		RewriteCond %{REQUEST_URI} !^.*/j_security_check.*
        RewriteRule    ${stwater_root}/(.*) https://%{SERVER_NAME}/${lc:$1} [NE,R,QSA]

        # Handle requests starting with the wront site path
        RewriteCond %{SERVER_NAME} ^${stwater_host}
        RewriteCond    %{REQUEST_URI} !^/content/dam/.*
        RewriteCond    %{REQUEST_URI} !^.*_jcr_content.*
		RewriteCond %{REQUEST_URI} !^.*/j_security_check.*
        RewriteRule    ${severntrent_root}/(.*) https://${severntrent_host}/${lc:$1} [R,QSA]

        # Handle requests to pages ending with a trailing slash

        RewriteCond %{SERVER_NAME} ^${stwater_host}
        RewriteCond     %{REQUEST_URI} !^/content/dam
        RewriteCond     %{REQUEST_URI} .*/$
        RewriteCond     %{REQUEST_URI} !^/$
        RewriteRule     (.*)/$ ${stwater_root}${lc:$1}.html [PT,L,QSA]


        # Handle the server root
        RewriteCond %{SERVER_NAME} ^${stwater_host}
        RewriteCond     %{REQUEST_URI} !^/content/dam
        RewriteCond     %{REQUEST_URI} ^/$
        RewriteRule     (.*) ${stwater_root}.html [PT,L,QSA]
		
       # Handle request for images from clientlib css
       RewriteCond %{SERVER_NAME} ^${stwater_host}
       RewriteRule  /bin/clientlibchacheservlet(.*)/content/dam/stw/icons/(.*)$ https://%{SERVER_NAME}/content/dam/stw/icons/$2 [NE,R,QSA]

        <If "%{SERVER_NAME} == '${stwater_host}'">

        Substitute "s!${severntrent_root}/(.*?).html!https://${severntrent_host}/$1/!i"
        Substitute "s!${stwater_root}/(.*?).html!/$1/!i"
        Substitute "s!${stwater_root}.html!$1/!i"
		Substitute "s!myaccount\.stwater\.co\.uk/wss/(.*?)!${wss_context}$1/!i"
        </If>
		
		#----- hdcymru.co.uk rules -----#
		Include conf.d/dispatcher_vhost_hdcymru.conf

        #----- severntrent.com rules -----#

	# Handle legacy WSS/book-marked header urls


	Include conf.d/legacy_redirects/legacy_redirects_severntrent.conf

        # Handle request with no slash and no extension
        RewriteCond %{SERVER_NAME} ^${severntrent_host}
        RewriteCond %{REQUEST_URI} !^/content/dam/.*
        RewriteCond %{REQUEST_URI} !^/bin/.*
        RewriteCond %{REQUEST_URI} !.*\..*$
        RewriteCond %{REQUEST_URI} !.*/$
        RewriteRule /(.*)$ https://%{SERVER_NAME}/${lc:$1}/ [R,QSA]


        # Handle requests to pages ending with an extension

	RewriteCond %{SERVER_NAME} ^${severntrent_host}
	RewriteCond    %{REQUEST_URI} !^/content/dam/.*
	RewriteCond    %{REQUEST_URI} !^/bin/.*
	RewriteCond    %{REQUEST_URI} !^/etc/.*
	RewriteCond    %{REQUEST_URI} !^/libs/.*
	RewriteCond    %{REQUEST_URI} !.(jpg|gif|png|svg)$
	RewriteCond    %{REQUEST_URI} !imgscale
	RewriteCond %{REQUEST_URI} !errorpages
	RewriteCond    %{REQUEST_URI} .*\..*$
	RewriteCond    %{REQUEST_URI} !.*/$
	RewriteRule    /(.*)\.(.*)$ https://%{SERVER_NAME}/${lc:$1}/ [R,QSA]


        # Handle requests starting with the site root path
        RewriteCond %{SERVER_NAME} ^${severntrent_host}
        RewriteCond    %{REQUEST_URI} !^/content/dam/.*
        RewriteCond    %{REQUEST_URI} !^.*_jcr_content.*
        RewriteRule    ${severntrent_root}/(.*) https://%{SERVER_NAME}/${lc:$1} [R,QSA]


        # Handle requests starting with the wront site path
        RewriteCond %{SERVER_NAME} ^${severntrent_host}
        RewriteCond    %{REQUEST_URI} !^/content/dam/.*
        RewriteCond    %{REQUEST_URI} !^.*_jcr_content.*
        RewriteRule    ${stwater_root}/(.*) https://${stwater_host}/${lc:$1} [R,QSA]


        # Handle requests to pages ending with a trailing slash
        RewriteCond %{SERVER_NAME} ^${severntrent_host}
        RewriteCond     %{REQUEST_URI} !^/content/dam
        RewriteCond     %{REQUEST_URI} .*/$
        RewriteCond     %{REQUEST_URI} !^/$
        RewriteRule     (.*)/$ ${severntrent_root}/${lc:$1}.html [PT,L,QSA]


        # Handle the server root
        RewriteCond %{SERVER_NAME} ^${severntrent_host}
        RewriteCond     %{REQUEST_URI} !^/content/dam
        RewriteCond     %{REQUEST_URI} ^/$
        RewriteRule     (.*) ${severntrent_root}.html [PT,L,QSA]


       <If "%{SERVER_NAME} == '${severntrent_host}'">
             Substitute "s!${stwater_root}/(.*?).html!https://${stwater_host}/$1/!i"
             Substitute "s!${severntrent_root}/(.*?).html!/$1/!i"
             Substitute "s!${severntrent_root}.html!$1/!i"
       </If>

	ErrorDocument 500 /errorpages/500.html
	ErrorDocument 501 /errorpages/500.html
	ErrorDocument 502 /errorpages/500.html
	ErrorDocument 503 /errorpages/maintenance.html
	ErrorDocument 404 " "


	<Directory />
		#<IfModule disp_apache2.c>
		#	ModMimeUsePathInfo On
		#	SetHandler dispatcher-handler
		#</IfModule>

		Options FollowSymLinks
		AllowOverride None

		# Insert filter
		SetOutputFilter DEFLATE

		# Don't compress images
		SetEnvIfNoCase Request_URI \
		\.(?:gif|jpe?g|png)$ no-gzip dont-vary

		SetEnvIfNoCase Request_URI /crx.* no-gzip dont-vary

		# Make sure proxies don't deliver the wrong content
		Header append Vary User-Agent env=!dont-vary
		# BIGBEAR-1328 prevent clickjacking
		SetEnvIf Request_URI "^" is_legacy_header_footer_request=0
                SetEnvIf Request_URI /wss_header is_legacy_header_footer_request
                SetEnvIf Request_URI /wss_footer is_legacy_header_footer_request
                SetEnvIf is_legacy_header_footer_request 1 !is_legacy_header_footer_request

                Header always append X-Frame-Options SAMEORIGIN env=is_legacy_header_footer_request

	</Directory>

	<Location "/errorpages">
		#Do nothing - render the page from the DocumentRoot location
		Header Set Cache-Control "max-age=0, no-store"
	</Location>

	<Location "/">
		#Send all other requests to the AEM dispatcher
		<IfModule disp_apache2.c>
			SetHandler dispatcher-handler
			ModMimeUsePathInfo On
		</IfModule>
	</Location>

        </VirtualHost>
